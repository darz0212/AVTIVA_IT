@{
    ViewBag.Title = "ACTIVA IT TEST";
}
<br />

<div>
    <h1>Albumes</h1>
</div>
<div class="container row">
    <div class="gallery_container" id="albums"></div>
</div>

<table class="table">
    <thead>
        <tr>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody id="albumGallery">
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="albumModalCenter" tabindex="-1" role="dialog" aria-labelledby="albumModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="albumModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="albumModalBody" class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script>
    var albumList = [];
    var albumDetailsList = [];
    var userSelected = "";

    const getAlbums = () => {
        fetch('https://jsonplaceholder.typicode.com/albums')
            .then(function (response) {
                return response.json()
            })
            .then((albums) => {
                if (albumList.length == 0)
                    albumList = albums;
                
                document.getElementById('albums').innerHTML = albumList.map(image =>
                    `<div loading='lazy' class='card album-card col-md-3' onclick="openModal('${image.title}','${image.userId}','${image.id}')" data-toggle="modal" data-target="#albumModalCenter" >
                    <div class="card-body">
                        <b>${image.title}"</b>
                        <p>userId: ${image.userId} - id:${image.id}</p>
                      </div>
                    </div>`
                ).join('')
            });
    }

    function openModal(title, userId, id) {
        $("#albumModalLongTitle").html("<b> " + title + "</b> (Usuario: " + userId + ")");
        getAlbumDetails('https://jsonplaceholder.typicode.com/albums/' + id + '/photos', id);
        userSelected = userId;
    }

    const getAlbumDetails = (url,id) => {
        fetch(url)
            .then(function (response) {
                return response.json()
            })
            .then((albumDetails) => {
                if (albumDetailsList.length == 0)
                    albumDetailsList = albumDetails.filter(function (element) {
                        return element.albumId == id;
                    });

                document.getElementById('albumModalBody').innerHTML = albumDetailsList.map(detail =>
                    `<div loading='lazy' class='card album-card row'>

                    <div class='col-md-4'>
                        <img src="${detail.thumbnailUrl}" alt="${detail.title}" width="150" height="150">
                        <br />
                    </div>
                    <div class='col-md-8'>
                        ${detail.title} <br />
                        <div class='buttons-section'>
                            <span class='glyphicon glyphicon-ok btnIcon' title='Agregar a favoritos' onclick="saveOption('add','${detail.albumId}','${detail.id}','${detail.title}')"></span>
                            <span class='glyphicon glyphicon-trash btnIcon' title='Eliminar de favoritos' onclick="saveOption('delete','${detail.albumId}','${detail.id}','${detail.title}')"></span>
                            <span class='glyphicon glyphicon-flag btnIcon' title='Marcar como inapropiado' onclick="saveOption('inapropiate','${detail.albumId}','${detail.id}','${detail.title}')"></span>
                            <span class='glyphicon glyphicon-ban-circle btnIcon' title='No volver a Listar' onclick="saveOption('inapropiate','${detail.albumId}','${detail.id}','${detail.title}')"></span>
                        </div>
                    </div>
                    
                    </div>`
                ).join('')
            });
    }

    function saveOption(option, albumId, id, title) {
        const  url = new URL("https://localhost:44374/api/userAlbum");
        switch (option) {
            case "add":
                var data = {
                    idAlbum: albumId,
                    idSong: id,
                    idUser: userSelected,
                    title: title,
                    isFavorite: true,
                    isHide: false,
                    isInapropiate: false,
                    isDeleted: false,
                };
                fetch(url, {
                    method: 'POST', // or 'PUT'
                    body: JSON.stringify(data), // data can be `string` or {object}!
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(res => res.json())
                    .catch(error => console.error('Error:', error))
                    .then(response => console.log('Success:', response));
                break;
            case "delete":
                var data = {
                    idAlbum: albumId,
                    idSong: id,
                    idUser: userSelected,
                    title: title,
                    isFavorite: false,
                    isHide: false,
                    isInapropiate: false,
                    isDeleted: true,
                };
                fetch(url, {
                    method: 'POST', // or 'PUT'
                    body: JSON.stringify(data), // data can be `string` or {object}!
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(res => res.json())
                    .catch(error => console.error('Error:', error))
                    .then(response => console.log('Success:', response));
                break;
            case "inapropiate":
                var data = {
                    idAlbum: albumId,
                    idSong: id,
                    idUser: userSelected,
                    title: title,
                    isFavorite: false,
                    isHide: false,
                    isInapropiate: true,
                    isDeleted: false,
                };
                fetch(url, {
                    method: 'POST', // or 'PUT'
                    body: JSON.stringify(data), // data can be `string` or {object}!
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(res => res.json())
                    .catch(error => console.error('Error:', error))
                    .then(response => console.log('Success:', response));
                break;
            case "hide":
                var data = {
                    idAlbum: albumId,
                    idSong: id,
                    idUser: userSelected,
                    title: title,
                    isFavorite: false,
                    isHide: true,
                    isInapropiate: false,
                    isDeleted: false,
                };
                fetch(url, {
                    method: 'POST', // or 'PUT'
                    body: JSON.stringify(data), // data can be `string` or {object}!
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(res => res.json())
                    .catch(error => console.error('Error:', error))
                    .then(response => console.log('Success:', response));
                break;
            default:
                break;
        }        
    }

    $(document).ready(function () {
        getAlbums();
    });
    
</script>

<style>
    .album-card {
        border-radius: 11px 11px 11px 11px;
        -moz-border-radius: 11px 11px 11px 11px;
        -webkit-border-radius: 11px 11px 11px 11px;
        border: 1px solid #000000;
        margin: 5px;
        cursor: pointer;
        background-color: #deeef1;
    }

    .album-card:hover {
        background-color: #82c6d0;
    }
    .buttons-section {
        float: right;
    }
    .btnIcon{
        padding: 2px;
    }
    .btnIcon:hover {
        transform: scale(1.5);
    }
</style>